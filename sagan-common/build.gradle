buildscript {
	ext.springRepo = 'https://repo.spring.io/libs-release'
	repositories {
            maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
		mavenCentral()
		maven { url springRepo }
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.18.RELEASE'
	}
}

plugins {
	id 'java'
}

apply plugin: "io.spring.dependency-management"

group = 'io.spring.sagan'
version = "1.0.0.BUILD-SNAPSHOT"
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url springRepo }
}

sourceSets {
    testUtil {
        java.srcDir 'src/test-util/java'
        resources.srcDir 'src/test-util/resources'
    }
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.boot:spring-boot-dependencies:1.5.18.RELEASE")
	}
}

ext['elasticsearch.version'] = '1.7.1'

dependencies {

    compile 'org.springframework.social:spring-social-github:1.0.0.M4'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-validation'
	compile 'org.springframework.boot:spring-boot-starter-security'

    compile 'org.apache.httpcomponents:httpclient'

    compile 'org.elasticsearch:elasticsearch'
    compile 'io.searchbox:jest:0.1.7'
    compile 'commons-codec:commons-codec' // needed by Jest's HTTP client?
    compile 'org.springframework.cloud:spring-cloud-spring-service-connector'
    compile 'org.springframework.cloud:spring-cloud-cloudfoundry-connector'

    // datasource and connection pool dependencies
    runtime 'org.postgresql:postgresql:9.4.1212'
    runtime 'com.h2database:h2'

    // for use in on-the-fly database setup and migrations
    compile 'org.flywaydb:flyway-core'

    // jackson, for JSON and XML serialization
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    compile "org.codehaus.woodstox:woodstox-core-asl:4.4.1"

    compile 'org.jsoup:jsoup:1.9.2'
    compile 'joda-time:joda-time'

    testUtilCompile "junit:junit"
    testUtilCompile sourceSets.main.output
    testUtilCompile configurations.compile
    testUtilRuntime configurations.runtime

    // pick up common test utility classes
    testCompile sourceSets.testUtil.output

    // for use of spring-test's MatcherAssertionErrors.*
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

